{"version":3,"sources":["serviceWorker.js","index.js"],"names":["Boolean","window","location","hostname","match","Calculator","props","state","input","savedInput","savedOperator","lastInputIsOperator","updateInput","bind","clear","performOperation","handleNegativeSign","event","value","target","toString","this","setState","includes","operator","add","subtract","multiply","divide","parseFloat","className","id","onClick","React","Component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.af91c873.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nclass Calculator extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tinput: '0',\n\t\t\tsavedInput: '',\n\t\t\tsavedOperator: '',\n\t\t\tlastInputIsOperator: false\n\t\t}\n\t\tthis.updateInput = this.updateInput.bind(this);\n\t\tthis.clear = this.clear.bind(this);\n\t\tthis.performOperation = this.performOperation.bind(this);\n\t\tthis.handleNegativeSign = this.handleNegativeSign.bind(this);\n\t}\n\n\tupdateInput(event) {\n\t\tconst value = event.target.value.toString();\n\t\tif (value === '-') {\n\t\t\tthis.setState({\n\t\t\t\tinput: value,\n\t\t\t\tlastInputIsOperator: false\n\t\t\t});\n\t\t} else if (value === '.') {\n\t\t\tif (!this.state.input.includes('.')) {\n\t\t\t\tthis.setState(state => ({\n\t\t\t\t\tinput: state.input + value,\n\t\t\t\t\tlastInputIsOperator: false\n\t\t\t\t}));\n\t\t\t}\n\t\t} else if (value === '0') {\n\t\t\tif (this.state.input !== '0') {\n\t\t\t\tthis.setState(state => ({\n\t\t\t\t\tinput: state.input + value,\n\t\t\t\t\tlastInputIsOperator: false\n\t\t\t\t}));\n\t\t\t}\n\t\t} else {\n\t\t\tif (this.state.input === '0') {\n\t\t\t\tthis.setState({\n\t\t\t\t\tinput: value,\n\t\t\t\t\tlastInputIsOperator: false\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState(state => ({\n\t\t\t\t\tinput: state.input + value,\n\t\t\t\t\tlastInputIsOperator: false\n\t\t\t\t}));\n\t\t\t}\n\t\t}\n\t}\n\n\tclear() {\n\t\tthis.setState({\n\t\t\tinput: '0',\n\t\t\tsavedInput: '',\n\t\t\tsavedOperator: ''\n\t\t});\n\t}\n\n\thandleNegativeSign(event) {\n\t\tif (this.state.lastInputIsOperator) {\n\t\t\tthis.updateInput(event);\n\t\t} else {\n\t\t\tthis.performOperation(event);\n\t\t}\n\t}\n\n\tperformOperation(event) {\n\t\tconst operator = event.target.value;\n\n\t\tif (this.state.input === '-') {\n\t\t\tthis.setState({\n\t\t\t\tinput: '0',\n\t\t\t\tsavedOperator: '',\n\t\t\t\tlastInputIsOperator: true\n\t\t\t});\n\t\t} else if (this.state.lastInputIsOperator) {\n\t\t\tthis.setState({\n\t\t\t\tsavedOperator: '',\n\t\t\t\tlastInputIsOperator: true\n\t\t\t});\n\t\t} else if (this.state.savedInput !== '') {\n\t\t\tif (this.state.savedOperator === '+') {\n\t\t\t\tthis.add();\n\t\t\t} else if (this.state.savedOperator === '-') {\n\t\t\t\tthis.subtract();\n\t\t\t} else if (this.state.savedOperator === '*') {\n\t\t\t\tthis.multiply();\n\t\t\t} else if (this.state.savedOperator === '/') {\n\t\t\t\tthis.divide();\n\t\t\t}\n\t\t} else if (operator !== '=') {\n\t\t\tthis.setState(state => ({\n\t\t\t\tsavedInput: state.input,\n\t\t\t\tinput: '0',\n\t\t\t\tlastInputIsOperator: true\n\t\t\t}));\n\t\t}\n\n\t\tif (operator === '=' && this.state.savedInput !== '') {\n\t\t\tthis.setState(state => ({\n\t\t\t\tinput: state.savedInput,\n\t\t\t\tsavedInput: '',\n\t\t\t\tsavedOperator: '',\n\t\t\t\tlastInputIsOperator: false\n\t\t\t}));\n\t\t} else if (operator !== '=') {\n\t\t\tthis.setState(state => ({\n\t\t\t\tsavedOperator: operator,\n\t\t\t\tlastInputIsOperator: true\n\t\t\t}));\n\t\t}\n\t}\n\n\tadd() {\n\t\tthis.setState(state => ({\n\t\t\tsavedInput: (parseFloat(state.savedInput) + parseFloat(state.input)).toString(),\n\t\t\tinput: '0'\n\t\t}));\n\t}\n\n\tsubtract() {\n\t\tthis.setState(state => ({\n\t\t\tsavedInput: (parseFloat(state.savedInput) - parseFloat(state.input)).toString(),\n\t\t\tinput: '0'\n\t\t}));\n\t}\n\n\tmultiply() {\n\t\tthis.setState(state => ({\n\t\t\tsavedInput: (parseFloat(state.savedInput) * parseFloat(state.input)).toString(),\n\t\t\tinput: '0'\n\t\t}));\n\t}\n\n\tdivide() {\n\t\tthis.setState(state => ({\n\t\t\tsavedInput: (parseFloat(state.savedInput) / parseFloat(state.input)).toString(),\n\t\t\tinput: '0'\n\t\t}));\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"calculator\">\n\t\t\t\t<div id=\"display\">{this.state.input}</div>\n\n\t\t\t\t<button onClick={this.clear} id=\"clear\">AC</button>\n\t\t\t\t<button value=\"/\" onClick={this.performOperation} id=\"divide\">/</button>\n\t\t\t\t<button value=\"*\" onClick={this.performOperation} id=\"multiply\">*</button>\n\n\t\t\t\t<button value=\"7\" onClick={this.updateInput} id=\"seven\">7</button>\n\t\t\t\t<button value=\"8\" onClick={this.updateInput} id=\"eight\">8</button>\n\t\t\t\t<button value=\"9\" onClick={this.updateInput} id=\"nine\">9</button>\n\t\t\t\t<button value=\"-\" onClick={this.handleNegativeSign} id=\"subtract\">-</button>\n\n\t\t\t\t<button value=\"4\" onClick={this.updateInput} id=\"four\">4</button>\n\t\t\t\t<button value=\"5\" onClick={this.updateInput} id=\"five\">5</button>\n\t\t\t\t<button value=\"6\" onClick={this.updateInput} id=\"six\">6</button>\n\t\t\t\t<button value=\"+\" onClick={this.performOperation} id=\"add\">+</button>\n\n\t\t\t\t<button value=\"1\" onClick={this.updateInput} id=\"one\">1</button>\n\t\t\t\t<button value=\"2\" onClick={this.updateInput} id=\"two\">2</button>\n\t\t\t\t<button value=\"3\" onClick={this.updateInput} id=\"three\">3</button>\n\t\t\t\t<button value=\"=\" onClick={this.performOperation} id=\"equals\">=</button>\n\n\t\t\t\t<button value=\"0\" onClick={this.updateInput} id=\"zero\">0</button>\n\t\t\t\t<button value=\".\" onClick={this.updateInput} id=\"decimal\">.</button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nReactDOM.render(<Calculator />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}